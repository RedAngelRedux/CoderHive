@using CoderHive.Services;
@using CoderHive.Models;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject IImageService imageService

@model IPagedList<Blog>

@{
    ViewData["Title"] = "Index";
}

<div class="hero overlay inner-page bg-primary py-3">
	<div class="container">
		<div class="row align-items-center justify-content-center text-center pt-3">
			<div class="col-lg-6">
				<h1 class="heading text-white mb-1" data-aos="fade-up">Blogs</h1>
			</div>
		</div>
	</div>
</div>

<section class="section">
	<div class="container">

		<div class="row mb-4">
			<div class="col-sm-6">
				<h2 class="posts-entry-title">To-do:  Filter and Sort Options Will Go Here</h2>
			</div>
			<div class="col-sm-6 text-sm-end"><a asp-controller="Blogs" asp-action="Index" class="read-more">View All</a></div>
		</div>

		<div class="row">
			@foreach(var blog in Model) 
			{
			<div class="col-lg-4 mb-4">
				<div class="post-entry-alt">
					@* <a asp-controller="Posts" asp-action="Index" class="img-link"><img src="images/img_7_horizontal.jpg" alt="Image" class="img-fluid"></a> *@
					<a asp-controller="Posts" asp-action="Index" asp-route-id="@blog.Id" class="img-link"><img src="@imageService.DecodeImage(blog.ImageData,blog.ImageType)" alt="Image" class="img-fluid"></a>
					<div class="excerpt">
						@* <h2><a asp-controller="Posts" asp-action="Index">Startup vs corporate: What job suits you best?</a></h2> *@
						<h2><a asp-controller="Posts" asp-action="Index" asp-route-id="@blog.Id">@blog.Name</a></h2>
						<div class="post-meta align-items-center text-left clearfix">
							<figure class="author-figure mb-0 me-3 float-start"><img src="images/person_1.jpg" alt="Image" class="img-fluid"></figure>
							<span class="d-inline-block mt-1">By <a href="#">@blog.Author.FullName</a></span>
							<span>&nbsp;-&nbsp; @blog.Created.ToString("MM dd, yyy")</span>
						</div>
						<p>@blog.Description</p>
						<p><a asp-controller="Posts" asp-action="Index" asp-route-id="@blog.Id" class="read-more">Go To Blog</a></p>
					</div>
				</div>
			</div>
			}
		</div>

        <!-- Add Paging Controls Here -->
		<div class="row text-start pt-5 border-top">
			<div class="col-md-12">
				<div class="custom-pagination"> 					
                    @*<span>1</span>
					<a href="#">2</a>
					<a href="#">3</a>
					<a href="#">4</a>
					<span>...</span>
                    <a href="#">15</a> 
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@
                    @Html.PagedListPager(Model, page => Url.Action("Index",new { page = page}));
                </div>
@*                 <div class="custom-pagination">
                    ,
                    new PagedListRenderOptionsBase {
                    LiElementClasses = new string[]{"page-item"},
                    PageClasses = new string[]{"page-link"}
                    });
                </div>
 *@			</div>
		</div>

@*         <div class="row">
            <div class="col h3">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
        </div>
         
        <div class="row">
        </div>
        *@
	</div>
</section>

























@* <p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var blog in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => blog.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.ImageData)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.ImageType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.Author.Id)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@blog.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@blog.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@blog.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@